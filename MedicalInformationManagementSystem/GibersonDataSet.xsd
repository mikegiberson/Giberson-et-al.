<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="GibersonDataSet" targetNamespace="http://tempuri.org/GibersonDataSet.xsd" xmlns:mstns="http://tempuri.org/GibersonDataSet.xsd" xmlns="http://tempuri.org/GibersonDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="GibersonConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="GibersonConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.HealthInformaticSystem.Properties.Settings.GlobalReference.Default.GibersonConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AllergyTableAdapter" GeneratorDataComponentClassName="AllergyTableAdapter" Name="Allergy" UserDataComponentName="AllergyTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GibersonConnectionString (Settings)" DbObjectName="Giberson.dbo.Allergy" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Allergy] WHERE (([allergyID] = @Original_allergyID) AND ([name] = @Original_name) AND ((@IsNull_category = 1 AND [category] IS NULL) OR ([category] = @Original_category)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_allergyID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="allergyID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_category" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="category" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_category" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="category" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Allergy] ([name], [category]) VALUES (@name, @category);
SELECT allergyID, name, category FROM Allergy WHERE (allergyID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@category" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="category" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT allergyID, name, category FROM dbo.Allergy</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Allergy] SET [name] = @name, [category] = @category WHERE (([allergyID] = @Original_allergyID) AND ([name] = @Original_name) AND ((@IsNull_category = 1 AND [category] IS NULL) OR ([category] = @Original_category)));
SELECT allergyID, name, category FROM Allergy WHERE (allergyID = @allergyID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@category" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="category" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_allergyID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="allergyID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_category" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="category" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_category" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="category" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="allergyID" ColumnName="allergyID" DataSourceName="Giberson.dbo.Allergy" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@allergyID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="allergyID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="allergyID" DataSetColumn="allergyID" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="category" DataSetColumn="category" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DoctorTableAdapter" GeneratorDataComponentClassName="DoctorTableAdapter" Name="Doctor" UserDataComponentName="DoctorTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GibersonConnectionString (Settings)" DbObjectName="Giberson.dbo.Doctor" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Doctor] WHERE (([doctorID] = @Original_doctorID) AND ([billingCode] = @Original_billingCode))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_doctorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="doctorID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_billingCode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="billingCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Doctor] ([doctorID], [billingCode]) VALUES (@doctorID, @billingCode);
SELECT doctorID, billingCode FROM Doctor WHERE (doctorID = @doctorID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@doctorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="doctorID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@billingCode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="billingCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT doctorID, billingCode FROM dbo.Doctor</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Doctor] SET [doctorID] = @doctorID, [billingCode] = @billingCode WHERE (([doctorID] = @Original_doctorID) AND ([billingCode] = @Original_billingCode));
SELECT doctorID, billingCode FROM Doctor WHERE (doctorID = @doctorID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@doctorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="doctorID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@billingCode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="billingCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_doctorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="doctorID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_billingCode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="billingCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="doctorID" DataSetColumn="doctorID" />
              <Mapping SourceColumn="billingCode" DataSetColumn="billingCode" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PatientTableAdapter" GeneratorDataComponentClassName="PatientTableAdapter" Name="Patient" UserDataComponentName="PatientTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GibersonConnectionString (Settings)" DbObjectName="Giberson.dbo.Patient" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Patient] WHERE (([patientID] = @Original_patientID) AND ([registratonDate] = @Original_registratonDate) AND ((@IsNull_lastName = 1 AND [lastName] IS NULL) OR ([lastName] = @Original_lastName)) AND ((@IsNull_giveMiddleName = 1 AND [giveMiddleName] IS NULL) OR ([giveMiddleName] = @Original_giveMiddleName)) AND ((@IsNull_dateOfBirth = 1 AND [dateOfBirth] IS NULL) OR ([dateOfBirth] = @Original_dateOfBirth)) AND ((@IsNull_gender = 1 AND [gender] IS NULL) OR ([gender] = @Original_gender)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_patientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="patientID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_registratonDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="registratonDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_lastName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="lastName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_lastName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="lastName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_giveMiddleName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="giveMiddleName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_giveMiddleName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="giveMiddleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_dateOfBirth" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dateOfBirth" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_dateOfBirth" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="dateOfBirth" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_gender" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="gender" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_gender" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="gender" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Patient] ([registratonDate], [lastName], [giveMiddleName], [dateOfBirth], [gender]) VALUES (@registratonDate, @lastName, @giveMiddleName, @dateOfBirth, @gender);
SELECT patientID, registratonDate, lastName, giveMiddleName, dateOfBirth, gender FROM Patient WHERE (patientID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@registratonDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="registratonDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@lastName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="lastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@giveMiddleName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="giveMiddleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@dateOfBirth" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="dateOfBirth" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@gender" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="gender" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT patientID, registratonDate, lastName, giveMiddleName, dateOfBirth, gender FROM dbo.Patient</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Patient] SET [registratonDate] = @registratonDate, [lastName] = @lastName, [giveMiddleName] = @giveMiddleName, [dateOfBirth] = @dateOfBirth, [gender] = @gender WHERE (([patientID] = @Original_patientID) AND ([registratonDate] = @Original_registratonDate) AND ((@IsNull_lastName = 1 AND [lastName] IS NULL) OR ([lastName] = @Original_lastName)) AND ((@IsNull_giveMiddleName = 1 AND [giveMiddleName] IS NULL) OR ([giveMiddleName] = @Original_giveMiddleName)) AND ((@IsNull_dateOfBirth = 1 AND [dateOfBirth] IS NULL) OR ([dateOfBirth] = @Original_dateOfBirth)) AND ((@IsNull_gender = 1 AND [gender] IS NULL) OR ([gender] = @Original_gender)));
SELECT patientID, registratonDate, lastName, giveMiddleName, dateOfBirth, gender FROM Patient WHERE (patientID = @patientID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@registratonDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="registratonDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@lastName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="lastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@giveMiddleName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="giveMiddleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@dateOfBirth" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="dateOfBirth" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@gender" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="gender" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_patientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="patientID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_registratonDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="registratonDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_lastName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="lastName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_lastName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="lastName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_giveMiddleName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="giveMiddleName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_giveMiddleName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="giveMiddleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_dateOfBirth" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dateOfBirth" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_dateOfBirth" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="dateOfBirth" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_gender" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="gender" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_gender" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="gender" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="patientID" ColumnName="patientID" DataSourceName="Giberson.dbo.Patient" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@patientID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="patientID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="patientID" DataSetColumn="patientID" />
              <Mapping SourceColumn="registratonDate" DataSetColumn="registratonDate" />
              <Mapping SourceColumn="lastName" DataSetColumn="lastName" />
              <Mapping SourceColumn="giveMiddleName" DataSetColumn="giveMiddleName" />
              <Mapping SourceColumn="dateOfBirth" DataSetColumn="dateOfBirth" />
              <Mapping SourceColumn="gender" DataSetColumn="gender" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PatientAddressTableAdapter" GeneratorDataComponentClassName="PatientAddressTableAdapter" Name="PatientAddress" UserDataComponentName="PatientAddressTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GibersonConnectionString (Settings)" DbObjectName="Giberson.dbo.PatientAddress" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PatientAddress] WHERE (([patientID] = @Original_patientID) AND ([timestamp] = @Original_timestamp))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_patientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="patientID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_timestamp" Precision="0" ProviderType="Timestamp" Scale="0" Size="0" SourceColumn="timestamp" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PatientAddress] ([patientID], [type], [deliveryAddress], [subdivision], [division], [postalCode], [country]) VALUES (@patientID, @type, @deliveryAddress, @subdivision, @division, @postalCode, @country);
SELECT patientID, timestamp, type, deliveryAddress, subdivision, division, postalCode, country FROM PatientAddress WHERE (patientID = @patientID) AND (timestamp = @timestamp)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@patientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="patientID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@type" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@deliveryAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="deliveryAddress" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@subdivision" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="subdivision" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@division" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="division" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@postalCode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="postalCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@country" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="country" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="timestamp" ColumnName="timestamp" DataSourceName="Giberson.dbo.PatientAddress" DataTypeServer="timestamp" DbType="Binary" Direction="Input" ParameterName="@timestamp" Precision="0" ProviderType="Timestamp" Scale="0" Size="8" SourceColumn="timestamp" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT patientID, timestamp, type, deliveryAddress, subdivision, division, postalCode, country FROM dbo.PatientAddress</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PatientAddress] SET [patientID] = @patientID, [type] = @type, [deliveryAddress] = @deliveryAddress, [subdivision] = @subdivision, [division] = @division, [postalCode] = @postalCode, [country] = @country WHERE (([patientID] = @Original_patientID) AND ([timestamp] = @Original_timestamp));
SELECT patientID, timestamp, type, deliveryAddress, subdivision, division, postalCode, country FROM PatientAddress WHERE (patientID = @patientID) AND (timestamp = @timestamp)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@patientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="patientID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@type" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@deliveryAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="deliveryAddress" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@subdivision" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="subdivision" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@division" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="division" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@postalCode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="postalCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@country" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="country" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_patientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="patientID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_timestamp" Precision="0" ProviderType="Timestamp" Scale="0" Size="0" SourceColumn="timestamp" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="timestamp" ColumnName="timestamp" DataSourceName="Giberson.dbo.PatientAddress" DataTypeServer="timestamp" DbType="Binary" Direction="Input" ParameterName="@timestamp" Precision="0" ProviderType="Timestamp" Scale="0" Size="8" SourceColumn="timestamp" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="patientID" DataSetColumn="patientID" />
              <Mapping SourceColumn="timestamp" DataSetColumn="timestamp" />
              <Mapping SourceColumn="type" DataSetColumn="type" />
              <Mapping SourceColumn="deliveryAddress" DataSetColumn="deliveryAddress" />
              <Mapping SourceColumn="subdivision" DataSetColumn="subdivision" />
              <Mapping SourceColumn="division" DataSetColumn="division" />
              <Mapping SourceColumn="postalCode" DataSetColumn="postalCode" />
              <Mapping SourceColumn="country" DataSetColumn="country" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PatientAllergyTableAdapter" GeneratorDataComponentClassName="PatientAllergyTableAdapter" Name="PatientAllergy" UserDataComponentName="PatientAllergyTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GibersonConnectionString (Settings)" DbObjectName="Giberson.dbo.PatientAllergy" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PatientAllergy] WHERE (([patientID] = @Original_patientID) AND ([allergyID] = @Original_allergyID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_patientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="patientID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_allergyID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="allergyID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PatientAllergy] ([patientID], [allergyID]) VALUES (@patientID, @allergyID);
SELECT patientID, allergyID FROM PatientAllergy WHERE (allergyID = @allergyID) AND (patientID = @patientID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@patientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="patientID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@allergyID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="allergyID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT patientID, allergyID FROM dbo.PatientAllergy</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PatientAllergy] SET [patientID] = @patientID, [allergyID] = @allergyID WHERE (([patientID] = @Original_patientID) AND ([allergyID] = @Original_allergyID));
SELECT patientID, allergyID FROM PatientAllergy WHERE (allergyID = @allergyID) AND (patientID = @patientID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@patientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="patientID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@allergyID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="allergyID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_patientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="patientID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_allergyID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="allergyID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="patientID" DataSetColumn="patientID" />
              <Mapping SourceColumn="allergyID" DataSetColumn="allergyID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PatientEmailTableAdapter" GeneratorDataComponentClassName="PatientEmailTableAdapter" Name="PatientEmail" UserDataComponentName="PatientEmailTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GibersonConnectionString (Settings)" DbObjectName="Giberson.dbo.PatientEmail" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PatientEmail] WHERE (([timestamp] = @Original_timestamp) AND ([patientID] = @Original_patientID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_timestamp" Precision="0" ProviderType="Timestamp" Scale="0" Size="0" SourceColumn="timestamp" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_patientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="patientID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PatientEmail] ([patientID], [type], [emailAddress]) VALUES (@patientID, @type, @emailAddress);
SELECT timestamp, patientID, type, emailAddress FROM PatientEmail WHERE (patientID = @patientID) AND (timestamp = @timestamp)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@patientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="patientID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@type" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@emailAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="emailAddress" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="timestamp" ColumnName="timestamp" DataSourceName="Giberson.dbo.PatientEmail" DataTypeServer="timestamp" DbType="Binary" Direction="Input" ParameterName="@timestamp" Precision="0" ProviderType="Timestamp" Scale="0" Size="8" SourceColumn="timestamp" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT timestamp, patientID, type, emailAddress FROM dbo.PatientEmail</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PatientEmail] SET [patientID] = @patientID, [type] = @type, [emailAddress] = @emailAddress WHERE (([timestamp] = @Original_timestamp) AND ([patientID] = @Original_patientID));
SELECT timestamp, patientID, type, emailAddress FROM PatientEmail WHERE (patientID = @patientID) AND (timestamp = @timestamp)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@patientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="patientID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@type" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@emailAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="emailAddress" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_timestamp" Precision="0" ProviderType="Timestamp" Scale="0" Size="0" SourceColumn="timestamp" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_patientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="patientID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="timestamp" ColumnName="timestamp" DataSourceName="Giberson.dbo.PatientEmail" DataTypeServer="timestamp" DbType="Binary" Direction="Input" ParameterName="@timestamp" Precision="0" ProviderType="Timestamp" Scale="0" Size="8" SourceColumn="timestamp" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="timestamp" DataSetColumn="timestamp" />
              <Mapping SourceColumn="patientID" DataSetColumn="patientID" />
              <Mapping SourceColumn="type" DataSetColumn="type" />
              <Mapping SourceColumn="emailAddress" DataSetColumn="emailAddress" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PatientOHIPInsuranceTableAdapter" GeneratorDataComponentClassName="PatientOHIPInsuranceTableAdapter" Name="PatientOHIPInsurance" UserDataComponentName="PatientOHIPInsuranceTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GibersonConnectionString (Settings)" DbObjectName="Giberson.dbo.PatientOHIPInsurance" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PatientOHIPInsurance] WHERE (([timestamp] = @Original_timestamp) AND ([patientID] = @Original_patientID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_timestamp" Precision="0" ProviderType="Timestamp" Scale="0" Size="0" SourceColumn="timestamp" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_patientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="patientID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PatientOHIPInsurance] ([patientID], [insuranceNumber], [versionCode], [expiryDate]) VALUES (@patientID, @insuranceNumber, @versionCode, @expiryDate);
SELECT timestamp, patientID, insuranceNumber, versionCode, expiryDate FROM PatientOHIPInsurance WHERE (patientID = @patientID) AND (timestamp = @timestamp)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@patientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="patientID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@insuranceNumber" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="insuranceNumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@versionCode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="versionCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@expiryDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="expiryDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="timestamp" ColumnName="timestamp" DataSourceName="Giberson.dbo.PatientOHIPInsurance" DataTypeServer="timestamp" DbType="Binary" Direction="Input" ParameterName="@timestamp" Precision="0" ProviderType="Timestamp" Scale="0" Size="8" SourceColumn="timestamp" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT timestamp, patientID, insuranceNumber, versionCode, expiryDate FROM dbo.PatientOHIPInsurance</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PatientOHIPInsurance] SET [patientID] = @patientID, [insuranceNumber] = @insuranceNumber, [versionCode] = @versionCode, [expiryDate] = @expiryDate WHERE (([timestamp] = @Original_timestamp) AND ([patientID] = @Original_patientID));
SELECT timestamp, patientID, insuranceNumber, versionCode, expiryDate FROM PatientOHIPInsurance WHERE (patientID = @patientID) AND (timestamp = @timestamp)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@patientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="patientID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@insuranceNumber" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="insuranceNumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@versionCode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="versionCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@expiryDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="expiryDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_timestamp" Precision="0" ProviderType="Timestamp" Scale="0" Size="0" SourceColumn="timestamp" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_patientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="patientID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="timestamp" ColumnName="timestamp" DataSourceName="Giberson.dbo.PatientOHIPInsurance" DataTypeServer="timestamp" DbType="Binary" Direction="Input" ParameterName="@timestamp" Precision="0" ProviderType="Timestamp" Scale="0" Size="8" SourceColumn="timestamp" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="timestamp" DataSetColumn="timestamp" />
              <Mapping SourceColumn="patientID" DataSetColumn="patientID" />
              <Mapping SourceColumn="insuranceNumber" DataSetColumn="insuranceNumber" />
              <Mapping SourceColumn="versionCode" DataSetColumn="versionCode" />
              <Mapping SourceColumn="expiryDate" DataSetColumn="expiryDate" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PatientPhoneTableAdapter" GeneratorDataComponentClassName="PatientPhoneTableAdapter" Name="PatientPhone" UserDataComponentName="PatientPhoneTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GibersonConnectionString (Settings)" DbObjectName="Giberson.dbo.PatientPhone" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PatientPhone] WHERE (([timestamp] = @Original_timestamp) AND ([patientID] = @Original_patientID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_timestamp" Precision="0" ProviderType="Timestamp" Scale="0" Size="0" SourceColumn="timestamp" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_patientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="patientID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PatientPhone] ([patientID], [type], [phoneNumber]) VALUES (@patientID, @type, @phoneNumber);
SELECT timestamp, patientID, type, phoneNumber FROM PatientPhone WHERE (patientID = @patientID) AND (timestamp = @timestamp)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@patientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="patientID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@type" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@phoneNumber" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="phoneNumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="timestamp" ColumnName="timestamp" DataSourceName="Giberson.dbo.PatientPhone" DataTypeServer="timestamp" DbType="Binary" Direction="Input" ParameterName="@timestamp" Precision="0" ProviderType="Timestamp" Scale="0" Size="8" SourceColumn="timestamp" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT timestamp, patientID, type, phoneNumber FROM dbo.PatientPhone</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PatientPhone] SET [patientID] = @patientID, [type] = @type, [phoneNumber] = @phoneNumber WHERE (([timestamp] = @Original_timestamp) AND ([patientID] = @Original_patientID));
SELECT timestamp, patientID, type, phoneNumber FROM PatientPhone WHERE (patientID = @patientID) AND (timestamp = @timestamp)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@patientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="patientID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@type" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@phoneNumber" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="phoneNumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_timestamp" Precision="0" ProviderType="Timestamp" Scale="0" Size="0" SourceColumn="timestamp" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_patientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="patientID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="timestamp" ColumnName="timestamp" DataSourceName="Giberson.dbo.PatientPhone" DataTypeServer="timestamp" DbType="Binary" Direction="Input" ParameterName="@timestamp" Precision="0" ProviderType="Timestamp" Scale="0" Size="8" SourceColumn="timestamp" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="timestamp" DataSetColumn="timestamp" />
              <Mapping SourceColumn="patientID" DataSetColumn="patientID" />
              <Mapping SourceColumn="type" DataSetColumn="type" />
              <Mapping SourceColumn="phoneNumber" DataSetColumn="phoneNumber" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ReferialDoctorTableAdapter" GeneratorDataComponentClassName="ReferialDoctorTableAdapter" Name="ReferialDoctor" UserDataComponentName="ReferialDoctorTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GibersonConnectionString (Settings)" DbObjectName="Giberson.dbo.ReferialDoctor" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ReferialDoctor] WHERE (([patientID] = @Original_patientID) AND ([doctorID] = @Original_doctorID) AND ([timestamp] = @Original_timestamp))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_patientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="patientID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_doctorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="doctorID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_timestamp" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="timestamp" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ReferialDoctor] ([patientID], [doctorID], [timestamp]) VALUES (@patientID, @doctorID, @timestamp);
SELECT patientID, doctorID, timestamp FROM ReferialDoctor WHERE (doctorID = @doctorID) AND (patientID = @patientID) AND (timestamp = @timestamp)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@patientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="patientID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@doctorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="doctorID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@timestamp" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="timestamp" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT patientID, doctorID, timestamp FROM dbo.ReferialDoctor</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ReferialDoctor] SET [patientID] = @patientID, [doctorID] = @doctorID, [timestamp] = @timestamp WHERE (([patientID] = @Original_patientID) AND ([doctorID] = @Original_doctorID) AND ([timestamp] = @Original_timestamp));
SELECT patientID, doctorID, timestamp FROM ReferialDoctor WHERE (doctorID = @doctorID) AND (patientID = @patientID) AND (timestamp = @timestamp)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@patientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="patientID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@doctorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="doctorID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@timestamp" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="timestamp" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_patientID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="patientID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_doctorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="doctorID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_timestamp" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="timestamp" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="patientID" DataSetColumn="patientID" />
              <Mapping SourceColumn="doctorID" DataSetColumn="doctorID" />
              <Mapping SourceColumn="timestamp" DataSetColumn="timestamp" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="GibersonDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="GibersonDataSet" msprop:Generator_UserDSName="GibersonDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Allergy" msprop:Generator_TableClassName="AllergyDataTable" msprop:Generator_TableVarName="tableAllergy" msprop:Generator_TablePropName="Allergy" msprop:Generator_RowDeletingName="AllergyRowDeleting" msprop:Generator_RowChangingName="AllergyRowChanging" msprop:Generator_RowEvHandlerName="AllergyRowChangeEventHandler" msprop:Generator_RowDeletedName="AllergyRowDeleted" msprop:Generator_UserTableName="Allergy" msprop:Generator_RowChangedName="AllergyRowChanged" msprop:Generator_RowEvArgName="AllergyRowChangeEvent" msprop:Generator_RowClassName="AllergyRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="allergyID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnallergyID" msprop:Generator_ColumnPropNameInRow="allergyID" msprop:Generator_ColumnPropNameInTable="allergyIDColumn" msprop:Generator_UserColumnName="allergyID" type="xs:int" />
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="250" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="category" msprop:Generator_ColumnVarNameInTable="columncategory" msprop:Generator_ColumnPropNameInRow="category" msprop:Generator_ColumnPropNameInTable="categoryColumn" msprop:Generator_UserColumnName="category" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Doctor" msprop:Generator_TableClassName="DoctorDataTable" msprop:Generator_TableVarName="tableDoctor" msprop:Generator_TablePropName="Doctor" msprop:Generator_RowDeletingName="DoctorRowDeleting" msprop:Generator_RowChangingName="DoctorRowChanging" msprop:Generator_RowEvHandlerName="DoctorRowChangeEventHandler" msprop:Generator_RowDeletedName="DoctorRowDeleted" msprop:Generator_UserTableName="Doctor" msprop:Generator_RowChangedName="DoctorRowChanged" msprop:Generator_RowEvArgName="DoctorRowChangeEvent" msprop:Generator_RowClassName="DoctorRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="doctorID" msprop:Generator_ColumnVarNameInTable="columndoctorID" msprop:Generator_ColumnPropNameInRow="doctorID" msprop:Generator_ColumnPropNameInTable="doctorIDColumn" msprop:Generator_UserColumnName="doctorID" type="xs:int" />
              <xs:element name="billingCode" msprop:Generator_ColumnVarNameInTable="columnbillingCode" msprop:Generator_ColumnPropNameInRow="billingCode" msprop:Generator_ColumnPropNameInTable="billingCodeColumn" msprop:Generator_UserColumnName="billingCode">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Patient" msprop:Generator_TableClassName="PatientDataTable" msprop:Generator_TableVarName="tablePatient" msprop:Generator_TablePropName="Patient" msprop:Generator_RowDeletingName="PatientRowDeleting" msprop:Generator_RowChangingName="PatientRowChanging" msprop:Generator_RowEvHandlerName="PatientRowChangeEventHandler" msprop:Generator_RowDeletedName="PatientRowDeleted" msprop:Generator_UserTableName="Patient" msprop:Generator_RowChangedName="PatientRowChanged" msprop:Generator_RowEvArgName="PatientRowChangeEvent" msprop:Generator_RowClassName="PatientRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="patientID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnpatientID" msprop:Generator_ColumnPropNameInRow="patientID" msprop:Generator_ColumnPropNameInTable="patientIDColumn" msprop:Generator_UserColumnName="patientID" type="xs:int" />
              <xs:element name="registratonDate" msprop:Generator_ColumnVarNameInTable="columnregistratonDate" msprop:Generator_ColumnPropNameInRow="registratonDate" msprop:Generator_ColumnPropNameInTable="registratonDateColumn" msprop:Generator_UserColumnName="registratonDate" type="xs:dateTime" />
              <xs:element name="lastName" msprop:Generator_ColumnVarNameInTable="columnlastName" msprop:Generator_ColumnPropNameInRow="lastName" msprop:Generator_ColumnPropNameInTable="lastNameColumn" msprop:Generator_UserColumnName="lastName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="giveMiddleName" msprop:Generator_ColumnVarNameInTable="columngiveMiddleName" msprop:Generator_ColumnPropNameInRow="giveMiddleName" msprop:Generator_ColumnPropNameInTable="giveMiddleNameColumn" msprop:Generator_UserColumnName="giveMiddleName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="150" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="dateOfBirth" msprop:Generator_ColumnVarNameInTable="columndateOfBirth" msprop:Generator_ColumnPropNameInRow="dateOfBirth" msprop:Generator_ColumnPropNameInTable="dateOfBirthColumn" msprop:Generator_UserColumnName="dateOfBirth" type="xs:dateTime" minOccurs="0" />
              <xs:element name="gender" msprop:Generator_ColumnVarNameInTable="columngender" msprop:Generator_ColumnPropNameInRow="gender" msprop:Generator_ColumnPropNameInTable="genderColumn" msprop:Generator_UserColumnName="gender" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PatientAddress" msprop:Generator_TableClassName="PatientAddressDataTable" msprop:Generator_TableVarName="tablePatientAddress" msprop:Generator_TablePropName="PatientAddress" msprop:Generator_RowDeletingName="PatientAddressRowDeleting" msprop:Generator_RowChangingName="PatientAddressRowChanging" msprop:Generator_RowEvHandlerName="PatientAddressRowChangeEventHandler" msprop:Generator_RowDeletedName="PatientAddressRowDeleted" msprop:Generator_UserTableName="PatientAddress" msprop:Generator_RowChangedName="PatientAddressRowChanged" msprop:Generator_RowEvArgName="PatientAddressRowChangeEvent" msprop:Generator_RowClassName="PatientAddressRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="patientID" msprop:Generator_ColumnVarNameInTable="columnpatientID" msprop:Generator_ColumnPropNameInRow="patientID" msprop:Generator_ColumnPropNameInTable="patientIDColumn" msprop:Generator_UserColumnName="patientID" type="xs:int" />
              <xs:element name="timestamp" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columntimestamp" msprop:Generator_ColumnPropNameInRow="timestamp" msprop:Generator_ColumnPropNameInTable="timestampColumn" msprop:Generator_UserColumnName="timestamp" type="xs:base64Binary" />
              <xs:element name="type" msprop:Generator_ColumnVarNameInTable="columntype" msprop:Generator_ColumnPropNameInRow="type" msprop:Generator_ColumnPropNameInTable="typeColumn" msprop:Generator_UserColumnName="type" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="deliveryAddress" msprop:Generator_ColumnVarNameInTable="columndeliveryAddress" msprop:Generator_ColumnPropNameInRow="deliveryAddress" msprop:Generator_ColumnPropNameInTable="deliveryAddressColumn" msprop:Generator_UserColumnName="deliveryAddress">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="200" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="subdivision" msprop:Generator_ColumnVarNameInTable="columnsubdivision" msprop:Generator_ColumnPropNameInRow="subdivision" msprop:Generator_ColumnPropNameInTable="subdivisionColumn" msprop:Generator_UserColumnName="subdivision">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="division" msprop:Generator_ColumnVarNameInTable="columndivision" msprop:Generator_ColumnPropNameInRow="division" msprop:Generator_ColumnPropNameInTable="divisionColumn" msprop:Generator_UserColumnName="division">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="postalCode" msprop:Generator_ColumnVarNameInTable="columnpostalCode" msprop:Generator_ColumnPropNameInRow="postalCode" msprop:Generator_ColumnPropNameInTable="postalCodeColumn" msprop:Generator_UserColumnName="postalCode">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="country" msprop:Generator_ColumnVarNameInTable="columncountry" msprop:Generator_ColumnPropNameInRow="country" msprop:Generator_ColumnPropNameInTable="countryColumn" msprop:Generator_UserColumnName="country" type="xs:base64Binary" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PatientAllergy" msprop:Generator_TableClassName="PatientAllergyDataTable" msprop:Generator_TableVarName="tablePatientAllergy" msprop:Generator_TablePropName="PatientAllergy" msprop:Generator_RowDeletingName="PatientAllergyRowDeleting" msprop:Generator_RowChangingName="PatientAllergyRowChanging" msprop:Generator_RowEvHandlerName="PatientAllergyRowChangeEventHandler" msprop:Generator_RowDeletedName="PatientAllergyRowDeleted" msprop:Generator_UserTableName="PatientAllergy" msprop:Generator_RowChangedName="PatientAllergyRowChanged" msprop:Generator_RowEvArgName="PatientAllergyRowChangeEvent" msprop:Generator_RowClassName="PatientAllergyRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="patientID" msprop:Generator_ColumnVarNameInTable="columnpatientID" msprop:Generator_ColumnPropNameInRow="patientID" msprop:Generator_ColumnPropNameInTable="patientIDColumn" msprop:Generator_UserColumnName="patientID" type="xs:int" />
              <xs:element name="allergyID" msprop:Generator_ColumnVarNameInTable="columnallergyID" msprop:Generator_ColumnPropNameInRow="allergyID" msprop:Generator_ColumnPropNameInTable="allergyIDColumn" msprop:Generator_UserColumnName="allergyID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PatientEmail" msprop:Generator_TableClassName="PatientEmailDataTable" msprop:Generator_TableVarName="tablePatientEmail" msprop:Generator_TablePropName="PatientEmail" msprop:Generator_RowDeletingName="PatientEmailRowDeleting" msprop:Generator_RowChangingName="PatientEmailRowChanging" msprop:Generator_RowEvHandlerName="PatientEmailRowChangeEventHandler" msprop:Generator_RowDeletedName="PatientEmailRowDeleted" msprop:Generator_UserTableName="PatientEmail" msprop:Generator_RowChangedName="PatientEmailRowChanged" msprop:Generator_RowEvArgName="PatientEmailRowChangeEvent" msprop:Generator_RowClassName="PatientEmailRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="timestamp" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columntimestamp" msprop:Generator_ColumnPropNameInRow="timestamp" msprop:Generator_ColumnPropNameInTable="timestampColumn" msprop:Generator_UserColumnName="timestamp" type="xs:base64Binary" />
              <xs:element name="patientID" msprop:Generator_ColumnVarNameInTable="columnpatientID" msprop:Generator_ColumnPropNameInRow="patientID" msprop:Generator_ColumnPropNameInTable="patientIDColumn" msprop:Generator_UserColumnName="patientID" type="xs:int" />
              <xs:element name="type" msprop:Generator_ColumnVarNameInTable="columntype" msprop:Generator_ColumnPropNameInRow="type" msprop:Generator_ColumnPropNameInTable="typeColumn" msprop:Generator_UserColumnName="type" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="emailAddress" msprop:Generator_ColumnVarNameInTable="columnemailAddress" msprop:Generator_ColumnPropNameInRow="emailAddress" msprop:Generator_ColumnPropNameInTable="emailAddressColumn" msprop:Generator_UserColumnName="emailAddress">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PatientOHIPInsurance" msprop:Generator_TableClassName="PatientOHIPInsuranceDataTable" msprop:Generator_TableVarName="tablePatientOHIPInsurance" msprop:Generator_TablePropName="PatientOHIPInsurance" msprop:Generator_RowDeletingName="PatientOHIPInsuranceRowDeleting" msprop:Generator_RowChangingName="PatientOHIPInsuranceRowChanging" msprop:Generator_RowEvHandlerName="PatientOHIPInsuranceRowChangeEventHandler" msprop:Generator_RowDeletedName="PatientOHIPInsuranceRowDeleted" msprop:Generator_UserTableName="PatientOHIPInsurance" msprop:Generator_RowChangedName="PatientOHIPInsuranceRowChanged" msprop:Generator_RowEvArgName="PatientOHIPInsuranceRowChangeEvent" msprop:Generator_RowClassName="PatientOHIPInsuranceRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="timestamp" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columntimestamp" msprop:Generator_ColumnPropNameInRow="timestamp" msprop:Generator_ColumnPropNameInTable="timestampColumn" msprop:Generator_UserColumnName="timestamp" type="xs:base64Binary" />
              <xs:element name="patientID" msprop:Generator_ColumnVarNameInTable="columnpatientID" msprop:Generator_ColumnPropNameInRow="patientID" msprop:Generator_ColumnPropNameInTable="patientIDColumn" msprop:Generator_UserColumnName="patientID" type="xs:int" />
              <xs:element name="insuranceNumber" msprop:Generator_ColumnVarNameInTable="columninsuranceNumber" msprop:Generator_ColumnPropNameInRow="insuranceNumber" msprop:Generator_ColumnPropNameInTable="insuranceNumberColumn" msprop:Generator_UserColumnName="insuranceNumber">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="versionCode" msprop:Generator_ColumnVarNameInTable="columnversionCode" msprop:Generator_ColumnPropNameInRow="versionCode" msprop:Generator_ColumnPropNameInTable="versionCodeColumn" msprop:Generator_UserColumnName="versionCode">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="expiryDate" msprop:Generator_ColumnVarNameInTable="columnexpiryDate" msprop:Generator_ColumnPropNameInRow="expiryDate" msprop:Generator_ColumnPropNameInTable="expiryDateColumn" msprop:Generator_UserColumnName="expiryDate" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PatientPhone" msprop:Generator_TableClassName="PatientPhoneDataTable" msprop:Generator_TableVarName="tablePatientPhone" msprop:Generator_TablePropName="PatientPhone" msprop:Generator_RowDeletingName="PatientPhoneRowDeleting" msprop:Generator_RowChangingName="PatientPhoneRowChanging" msprop:Generator_RowEvHandlerName="PatientPhoneRowChangeEventHandler" msprop:Generator_RowDeletedName="PatientPhoneRowDeleted" msprop:Generator_UserTableName="PatientPhone" msprop:Generator_RowChangedName="PatientPhoneRowChanged" msprop:Generator_RowEvArgName="PatientPhoneRowChangeEvent" msprop:Generator_RowClassName="PatientPhoneRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="timestamp" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columntimestamp" msprop:Generator_ColumnPropNameInRow="timestamp" msprop:Generator_ColumnPropNameInTable="timestampColumn" msprop:Generator_UserColumnName="timestamp" type="xs:base64Binary" />
              <xs:element name="patientID" msprop:Generator_ColumnVarNameInTable="columnpatientID" msprop:Generator_ColumnPropNameInRow="patientID" msprop:Generator_ColumnPropNameInTable="patientIDColumn" msprop:Generator_UserColumnName="patientID" type="xs:int" />
              <xs:element name="type" msprop:Generator_ColumnVarNameInTable="columntype" msprop:Generator_ColumnPropNameInRow="type" msprop:Generator_ColumnPropNameInTable="typeColumn" msprop:Generator_UserColumnName="type" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="phoneNumber" msprop:Generator_ColumnVarNameInTable="columnphoneNumber" msprop:Generator_ColumnPropNameInRow="phoneNumber" msprop:Generator_ColumnPropNameInTable="phoneNumberColumn" msprop:Generator_UserColumnName="phoneNumber">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ReferialDoctor" msprop:Generator_TableClassName="ReferialDoctorDataTable" msprop:Generator_TableVarName="tableReferialDoctor" msprop:Generator_TablePropName="ReferialDoctor" msprop:Generator_RowDeletingName="ReferialDoctorRowDeleting" msprop:Generator_RowChangingName="ReferialDoctorRowChanging" msprop:Generator_RowEvHandlerName="ReferialDoctorRowChangeEventHandler" msprop:Generator_RowDeletedName="ReferialDoctorRowDeleted" msprop:Generator_UserTableName="ReferialDoctor" msprop:Generator_RowChangedName="ReferialDoctorRowChanged" msprop:Generator_RowEvArgName="ReferialDoctorRowChangeEvent" msprop:Generator_RowClassName="ReferialDoctorRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="patientID" msprop:Generator_ColumnVarNameInTable="columnpatientID" msprop:Generator_ColumnPropNameInRow="patientID" msprop:Generator_ColumnPropNameInTable="patientIDColumn" msprop:Generator_UserColumnName="patientID" type="xs:int" />
              <xs:element name="doctorID" msprop:Generator_ColumnVarNameInTable="columndoctorID" msprop:Generator_ColumnPropNameInRow="doctorID" msprop:Generator_ColumnPropNameInTable="doctorIDColumn" msprop:Generator_UserColumnName="doctorID" type="xs:int" />
              <xs:element name="timestamp" msprop:Generator_ColumnVarNameInTable="columntimestamp" msprop:Generator_ColumnPropNameInRow="timestamp" msprop:Generator_ColumnPropNameInTable="timestampColumn" msprop:Generator_UserColumnName="timestamp" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Allergy" />
      <xs:field xpath="mstns:allergyID" />
    </xs:unique>
    <xs:unique name="Doctor_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Doctor" />
      <xs:field xpath="mstns:doctorID" />
    </xs:unique>
    <xs:unique name="Patient_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Patient" />
      <xs:field xpath="mstns:patientID" />
    </xs:unique>
    <xs:unique name="PatientAddress_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PatientAddress" />
      <xs:field xpath="mstns:patientID" />
      <xs:field xpath="mstns:timestamp" />
    </xs:unique>
    <xs:unique name="PatientAllergy_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PatientAllergy" />
      <xs:field xpath="mstns:patientID" />
      <xs:field xpath="mstns:allergyID" />
    </xs:unique>
    <xs:unique name="PatientEmail_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PatientEmail" />
      <xs:field xpath="mstns:timestamp" />
      <xs:field xpath="mstns:patientID" />
    </xs:unique>
    <xs:unique name="PatientOHIPInsurance_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PatientOHIPInsurance" />
      <xs:field xpath="mstns:timestamp" />
      <xs:field xpath="mstns:patientID" />
    </xs:unique>
    <xs:unique name="PatientPhone_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PatientPhone" />
      <xs:field xpath="mstns:timestamp" />
      <xs:field xpath="mstns:patientID" />
    </xs:unique>
    <xs:unique name="ReferialDoctor_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ReferialDoctor" />
      <xs:field xpath="mstns:patientID" />
      <xs:field xpath="mstns:doctorID" />
      <xs:field xpath="mstns:timestamp" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_PatientAddress_Patient" msdata:parent="Patient" msdata:child="PatientAddress" msdata:parentkey="patientID" msdata:childkey="patientID" msprop:Generator_UserChildTable="PatientAddress" msprop:Generator_ChildPropName="GetPatientAddressRows" msprop:Generator_UserRelationName="FK_PatientAddress_Patient" msprop:Generator_ParentPropName="PatientRow" msprop:Generator_RelationVarName="relationFK_PatientAddress_Patient" msprop:Generator_UserParentTable="Patient" />
      <msdata:Relationship name="FK_PatientAllergy_Allergy" msdata:parent="Allergy" msdata:child="PatientAllergy" msdata:parentkey="allergyID" msdata:childkey="allergyID" msprop:Generator_UserChildTable="PatientAllergy" msprop:Generator_ChildPropName="GetPatientAllergyRows" msprop:Generator_UserRelationName="FK_PatientAllergy_Allergy" msprop:Generator_ParentPropName="AllergyRow" msprop:Generator_RelationVarName="relationFK_PatientAllergy_Allergy" msprop:Generator_UserParentTable="Allergy" />
      <msdata:Relationship name="FK_PatientAllergy_Patient" msdata:parent="Patient" msdata:child="PatientAllergy" msdata:parentkey="patientID" msdata:childkey="patientID" msprop:Generator_UserChildTable="PatientAllergy" msprop:Generator_ChildPropName="GetPatientAllergyRows" msprop:Generator_UserRelationName="FK_PatientAllergy_Patient" msprop:Generator_ParentPropName="PatientRow" msprop:Generator_RelationVarName="relationFK_PatientAllergy_Patient" msprop:Generator_UserParentTable="Patient" />
      <msdata:Relationship name="FK_PatientEmail_Patient" msdata:parent="Patient" msdata:child="PatientEmail" msdata:parentkey="patientID" msdata:childkey="patientID" msprop:Generator_UserChildTable="PatientEmail" msprop:Generator_ChildPropName="GetPatientEmailRows" msprop:Generator_UserRelationName="FK_PatientEmail_Patient" msprop:Generator_ParentPropName="PatientRow" msprop:Generator_RelationVarName="relationFK_PatientEmail_Patient" msprop:Generator_UserParentTable="Patient" />
      <msdata:Relationship name="FK_PatientInsurance_Patient" msdata:parent="Patient" msdata:child="PatientOHIPInsurance" msdata:parentkey="patientID" msdata:childkey="patientID" msprop:Generator_UserChildTable="PatientOHIPInsurance" msprop:Generator_ChildPropName="GetPatientOHIPInsuranceRows" msprop:Generator_UserRelationName="FK_PatientInsurance_Patient" msprop:Generator_ParentPropName="PatientRow" msprop:Generator_RelationVarName="relationFK_PatientInsurance_Patient" msprop:Generator_UserParentTable="Patient" />
      <msdata:Relationship name="FK_PatientPhone_Patient" msdata:parent="Patient" msdata:child="PatientPhone" msdata:parentkey="patientID" msdata:childkey="patientID" msprop:Generator_UserChildTable="PatientPhone" msprop:Generator_ChildPropName="GetPatientPhoneRows" msprop:Generator_UserRelationName="FK_PatientPhone_Patient" msprop:Generator_ParentPropName="PatientRow" msprop:Generator_RelationVarName="relationFK_PatientPhone_Patient" msprop:Generator_UserParentTable="Patient" />
      <msdata:Relationship name="FK_ReferialDoctor_Doctor" msdata:parent="Doctor" msdata:child="ReferialDoctor" msdata:parentkey="doctorID" msdata:childkey="doctorID" msprop:Generator_UserChildTable="ReferialDoctor" msprop:Generator_ChildPropName="GetReferialDoctorRows" msprop:Generator_UserRelationName="FK_ReferialDoctor_Doctor" msprop:Generator_ParentPropName="DoctorRow" msprop:Generator_RelationVarName="relationFK_ReferialDoctor_Doctor" msprop:Generator_UserParentTable="Doctor" />
      <msdata:Relationship name="FK_ReferialDoctor_Patient" msdata:parent="Patient" msdata:child="ReferialDoctor" msdata:parentkey="patientID" msdata:childkey="patientID" msprop:Generator_UserChildTable="ReferialDoctor" msprop:Generator_ChildPropName="GetReferialDoctorRows" msprop:Generator_UserRelationName="FK_ReferialDoctor_Patient" msprop:Generator_ParentPropName="PatientRow" msprop:Generator_RelationVarName="relationFK_ReferialDoctor_Patient" msprop:Generator_UserParentTable="Patient" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>